*{padding:0;border:0}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}*,h1,h2,h3,h4,h5,h6,p{margin:0}a,a:link,a:visited{text-decoration:none;text-wrap:nowrap}footer:focus,section:focus{outline:0}ul{list-style:none;margin:0;padding:0}button{padding:0;text-wrap:nowrap}img{width:100%}address{font-style:normal}button,select{cursor:pointer}html{scroll-behavior:smooth}body{max-width:1680px;min-width:320px;margin-left:auto;margin-right:auto}:root{--container-width:1680px;--container-padding:0;--font-main:"Open Sans", sans-serif;--font-accent:"Cormorant Upright", serif;--font-sign:"Bestermind", serif;--page-bg:rgba(12, 12, 12, 1);--text-color:rgba(220, 202, 135, 1);--accent:rgba(170, 170, 170, 1);--laptop-size:1199px;--table-size:959px;--mobile-size:599px}.none{display:none!important}.visually-hidden{position:absolute;width:1px;height:1px;margin:-1px;border:0;padding:0;white-space:nowrap;clip-path:inset(100%);clip:rect(0 0 0 0);overflow:hidden}.no-scroll{overflow-y:hidden}body,html{min-width:100vh}.footer{margin-top:auto}@font-face{font-family:"BestermindRegular";font-display:swap;src:url(../fonts/BestermindRegular.woff2) format("woff2"),url(../fonts/BestermindRegular.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:"CormorantUpright";font-display:swap;src:url(../fonts/CormorantUpright-Bold.woff2) format("woff2"),url(../fonts/CormorantUpright-Bold.woff) format("woff");font-weight:700;font-style:normal}@font-face{font-family:"CormorantUpright";font-display:swap;src:url(../fonts/CormorantUpright-SemiBold.woff2) format("woff2"),url(../fonts/CormorantUpright-SemiBold.woff) format("woff");font-weight:600;font-style:normal}@font-face{font-family:"CormorantUpright";font-display:swap;src:url(../fonts/CormorantUpright-Regular.woff2) format("woff2"),url(../fonts/CormorantUpright-Regular.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:"OpenSans";font-display:swap;src:url(../fonts/OpenSans-Italic.woff2) format("woff2"),url(../fonts/OpenSans-Italic.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:"OpenSans";font-display:swap;src:url(../fonts/OpenSans-SemiBold.woff2) format("woff2"),url(../fonts/OpenSans-SemiBold.woff) format("woff");font-weight:600;font-style:normal}@font-face{font-family:"OpenSans";font-display:swap;src:url(../fonts/OpenSans-Regular.woff2) format("woff2"),url(../fonts/OpenSans-Regular.woff) format("woff");font-weight:400;font-style:normal}.mobile-nav,body,html{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.mobile-nav{background:#829ca8;position:fixed;top:-100%;width:100%;height:100%;z-index:99;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding-top:40px;padding-bottom:40px;-webkit-transition:all .2s ease-in;transition:all .2s ease-in}.mobile-nav--open{top:0}.mobile-nav a{color:#fff}.mobile-nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;row-gap:20px;font-size:28px}.mobile-nav__list .active{opacity:.5}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
